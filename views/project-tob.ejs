<% include header.ejs %>


	<header class="header_area">
		<div class="main_menu">
		<% include navbar.ejs %>
		</div>
	</header>

	<!--================ Start portfolio Banner Area =================-->
	<section class="banner_area">
		<div class="banner_inner d-flex align-items-center">
			<div class="container">
				<div class="banner_content text-right">
					<h1>Project - Takeout-buddy (WIP)</h1>
					<div class="page_link">
						<a href="index.html">Home</a>
						<a href="portfolio.html">Portfolio</a>
						<a href="portfolio-details.html">Details</a>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!--================ End Portfolio Banner Area =================-->

	<!--================ Start Portfolio Details Area =================-->

	<section class="portfolio_details_area section_gap">
		<div class="container">
			<div class="portfolio_details_inner">
<div  id="_owl-carousel" class=" owl-carousel owl-theme owl-loaded" >
							<div  class="row">
								<div class="col-md-7">
									<div class="left_img">
										<div class="slider">
											<div><img class="img-fluid" src="img/works/project-tob-2.png" alt=""></div>
											<div><img class="img-fluid" src="img/works/project-tob-1.png" alt=""></div>
											<div><img class="img-fluid" src="img/works/project-tob-4.png" alt=""></div>
										</div>
									</div>
								</div>
								<!--================= Project SLIDER ==================== -->
								<div class="offset-md-1 col-md-4">
									<div class="portfolio_right_text mt-30">
										<h4>Setting up the Database</h4>
										<p>For the project I had to create a Postgresql database that would be used to parse data received from the WooCommerce API (V3) and store vendor information such as emails, items by vendor, and the items information. I was also required to setup the connect module on the web api to process database imports for current vendors/items from the WooCommerce store. The database was also an aws instance deployed on <a target="_blank" href="https://www.heroku.com/">Heroku</a> (done for free testing).</p>
										<ul class="list">
											<li><span>Code Used</span>: <a target="_blank" href="https://github.com/opiatamus79/express-portfolio/blob/master/public/code-docs/tob-api/routes/woocommerceRoutes.js">woocommerceRoutes.js</a>,  <a target="_blank" href="https://github.com/opiatamus79/express-portfolio/blob/master/public/code-docs/tob-api/app_modules/woocommerce/woocommerce.js">woocommerce.js</a>, <a target="_blank" href="https://github.com/opiatamus79/express-portfolio/blob/master/public/code-docs/tob-api/app_modules/connect/connect_test_PGP.js">connect_test_PGP.js</a>, <a target="_blank" href="https://github.com/opiatamus79/express-portfolio/blob/master/public/code-docs/tob-api/db/db.sql">db.sql </a></li>
										</ul>

									</div>
								</div>
							</div>

							<div class="row">
								<div class="col-md-7">
									<div class="left_img">
										<div class="slider">
											<div><img class="img-fluid" src="img/works/project-tob-3.png" alt=""></div>
											<div><img class="img-fluid" src="img/works/project-tob-5.png" alt=""></div>
										</div>
									</div>
								</div>
								<div class="offset-md-1 col-md-4">
									<div class="portfolio_right_text mt-30">
										<h4>Setting up the Communication module</h4>
										<p>Had setup <a target="_blank" href="https://www.npmjs.com/package/nodemailer">Nodemailer</a> to be able to send emails to vendors that were involved in a purchase from Woocommerce site. The Woocommerce api originally only sent the woocommerce account an email and would not send out emails to the vendors involved in a sale nor would the items be seperated for each vendor on a receipt. This was handled by the web api.</p>
										<ul class="list">
											<li><span>Code Used</span>: <a target="_blank" href="https://github.com/opiatamus79/express-portfolio/blob/master/public/code-docs/tob-api/app_modules/communication/woocommerceRoutes-snippet.js"> WooCommerceRoutes-snippet.js</a>, <a target="_blank" href="https://github.com/opiatamus79/express-portfolio/blob/master/public/code-docs/tob-api/app_modules/communication/communication.js"> communication.js </a></li>
										</ul>

									</div>
								</div>
							</div>

							<div class="row">
								<div class="col-md-7">
									<div class="left_img">
										<div class="slider">
											<div><img class="img-fluid" src="img/works/project-tob-6.png" alt=""></div>
											<div><img class="img-fluid" src="img/works/project-donna-9.png" alt=""></div>

										</div>
									</div>
								</div>
								<div class="offset-md-1 col-md-4">
									<div class="portfolio_right_text mt-30">
										<h4>Receipt Processing Script</h4>
										<p>In order to send each recognized vendor an email when orders were placed the original receipt data sent from WooCommerce would get parsed using the script created. This is the last work committed to the project. The project would only need to have email templates setup to cleanly display a receipt to a vendor and the project would be considered complete.</p>
										<ul class="list">
											<li><span>Code Used</span>: <a target="_blank" href="https://github.com/opiatamus79/express-portfolio/blob/master/public/code-docs/tob-api/receiptlogic.js">receiptlogic.js</a></li>
										</ul>

									</div>
								</div>
							</div>
							<!--=================/ Project SLIDER ==================== -->
			</div>
			
				<p> A personal project started by myself and one other member. The motive for this project was to be able to process/parse receipts that would contain orders placed for multiple vendors on a Wordpress site that is using WooCommerce. My partner in this project (Felipe Cantu) created a wordpress site and asked that I create an application that could split the multiple items found on a single receipt and issue multiple receipts based on the vendors that received an order. The vendors involved in a sale would also each receive an email of a processed receipt, which was setup through the web api using Nodemailer. The site allows customers to place orders for products from multiple vendors in a single checkout. </p>
				<p> The Web Api has been developed in Express/Nodejs and was integrated with WooCommerce Api and Nodemailer. 
					</p>
			</div>

		</div>

		<!-- Set up your HTML -->

	</section>
	<!--================ Start Portfolio Details Area =================-->

<% include footer.ejs %>


<script>
$( document ).ready(function() {

 //$('.owl-carousel').owlCarousel();

//$('#_slide_1_carousel').owlCarousel();
 $("#_owl-carousel").owlCarousel({
 		items: 1,
        loop:true,
        margin:10,
	   autoplay:true,
	   autoplayTimeout:18000,
	   autoplayHoverPause:true,
        nav:true,
      navText: ['<i class="fa fa-angle-left fa-2x" aria-hidden="true"></i>', '<i class="fa fa-angle-right fa-2x" aria-hidden="true"></i>']
});


  $('.slider').slick({
     	dots: true,
	    vertical: true,
	    slidesToShow: 1,
	    slidesToScroll: 1,
	    verticalSwiping: true,
	    autoplay: true,
  		autoplaySpeed: 2000,
  });
  
});

</script>


  </body>
</html>
